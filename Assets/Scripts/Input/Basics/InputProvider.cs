//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Settings/Input/Input Provider.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GameEngine.Input
{
    public partial class @InputProvider: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputProvider()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Provider"",
    ""maps"": [
        {
            ""name"": ""Basic"",
            ""id"": ""bc4649cb-4fa7-4ef8-937a-fbe1e82ebcbe"",
            ""actions"": [
                {
                    ""name"": ""Touch #1"",
                    ""type"": ""Value"",
                    ""id"": ""732e97a3-e8e3-45d9-a32f-bec8b82a13bd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch #2"",
                    ""type"": ""Value"",
                    ""id"": ""d39e4f6e-836d-4a1e-b5c9-c79751dd2664"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch #3"",
                    ""type"": ""Value"",
                    ""id"": ""1be28b5f-1f1b-4a6c-b377-dfcb7508414b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Pointer"",
                    ""id"": ""bd377503-edab-43c6-aeb9-07fe0a8ba6b0"",
                    ""path"": ""Pointer"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""contact"",
                    ""id"": ""9ccef942-d8b9-42c1-b419-1ac0df6d6e9b"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""position"",
                    ""id"": ""b946c68a-7b6e-4bdb-bb38-ef7239921ce0"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""delta"",
                    ""id"": ""3ca3dee3-787f-40e4-89a4-1127cf3f4c3e"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""pressure"",
                    ""id"": ""c42e6623-e239-4070-bd6d-df80909681a2"",
                    ""path"": ""<Touchscreen>/touch0/pressure"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""contact"",
                    ""id"": ""5eb1f659-2326-4b7b-8fa2-60fa587ee202"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""position"",
                    ""id"": ""46023eda-ad1d-4639-85d1-2a92b21701e5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""delta"",
                    ""id"": ""1e55c1d6-2db6-4151-bb21-dcff5e29c6b2"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""pressure"",
                    ""id"": ""4f04326a-f403-416a-91a0-18b1138f59cd"",
                    ""path"": ""<Mouse>/pressure"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Touch #1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Pointer"",
                    ""id"": ""879a0a5b-de03-4372-9016-39b1dc1dafca"",
                    ""path"": ""Pointer"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""contact"",
                    ""id"": ""4e7623b9-8ca5-42e1-a6b5-9d584faabc54"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""position"",
                    ""id"": ""e349aa1e-1749-4ef7-a64e-39ec3d007b7c"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""delta"",
                    ""id"": ""16702065-4861-4c30-bcc5-3e593bdb4b2a"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""pressure"",
                    ""id"": ""a0e9d8c1-8ef8-4ec7-ae3a-dec518ecd59a"",
                    ""path"": ""<Touchscreen>/touch1/pressure"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Pointer"",
                    ""id"": ""2d2af4ba-0190-451a-8eb0-5648a2978dd5"",
                    ""path"": ""Pointer"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #3"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""contact"",
                    ""id"": ""2b797a57-3575-48ab-8705-878c536b2d57"",
                    ""path"": ""<Touchscreen>/touch2/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""position"",
                    ""id"": ""706dde91-11bc-46fc-86d1-51850280d491"",
                    ""path"": ""<Touchscreen>/touch2/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""delta"",
                    ""id"": ""24d25230-d5fa-495c-8ec3-c28ac8866074"",
                    ""path"": ""<Touchscreen>/touch2/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""pressure"",
                    ""id"": ""957157fc-60f1-461c-b966-e210265cb5b0"",
                    ""path"": ""<Touchscreen>/touch2/pressure"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch #3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Basic
            m_Basic = asset.FindActionMap("Basic", throwIfNotFound: true);
            m_Basic_Touch1 = m_Basic.FindAction("Touch #1", throwIfNotFound: true);
            m_Basic_Touch2 = m_Basic.FindAction("Touch #2", throwIfNotFound: true);
            m_Basic_Touch3 = m_Basic.FindAction("Touch #3", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Basic
        private readonly InputActionMap m_Basic;
        private List<IBasicActions> m_BasicActionsCallbackInterfaces = new List<IBasicActions>();
        private readonly InputAction m_Basic_Touch1;
        private readonly InputAction m_Basic_Touch2;
        private readonly InputAction m_Basic_Touch3;
        public struct BasicActions
        {
            private @InputProvider m_Wrapper;
            public BasicActions(@InputProvider wrapper) { m_Wrapper = wrapper; }
            public InputAction @Touch1 => m_Wrapper.m_Basic_Touch1;
            public InputAction @Touch2 => m_Wrapper.m_Basic_Touch2;
            public InputAction @Touch3 => m_Wrapper.m_Basic_Touch3;
            public InputActionMap Get() { return m_Wrapper.m_Basic; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BasicActions set) { return set.Get(); }
            public void AddCallbacks(IBasicActions instance)
            {
                if (instance == null || m_Wrapper.m_BasicActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_BasicActionsCallbackInterfaces.Add(instance);
                @Touch1.started += instance.OnTouch1;
                @Touch1.performed += instance.OnTouch1;
                @Touch1.canceled += instance.OnTouch1;
                @Touch2.started += instance.OnTouch2;
                @Touch2.performed += instance.OnTouch2;
                @Touch2.canceled += instance.OnTouch2;
                @Touch3.started += instance.OnTouch3;
                @Touch3.performed += instance.OnTouch3;
                @Touch3.canceled += instance.OnTouch3;
            }

            private void UnregisterCallbacks(IBasicActions instance)
            {
                @Touch1.started -= instance.OnTouch1;
                @Touch1.performed -= instance.OnTouch1;
                @Touch1.canceled -= instance.OnTouch1;
                @Touch2.started -= instance.OnTouch2;
                @Touch2.performed -= instance.OnTouch2;
                @Touch2.canceled -= instance.OnTouch2;
                @Touch3.started -= instance.OnTouch3;
                @Touch3.performed -= instance.OnTouch3;
                @Touch3.canceled -= instance.OnTouch3;
            }

            public void RemoveCallbacks(IBasicActions instance)
            {
                if (m_Wrapper.m_BasicActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IBasicActions instance)
            {
                foreach (var item in m_Wrapper.m_BasicActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_BasicActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public BasicActions @Basic => new BasicActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_TouchSchemeIndex = -1;
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        private int m_JoystickSchemeIndex = -1;
        public InputControlScheme JoystickScheme
        {
            get
            {
                if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
                return asset.controlSchemes[m_JoystickSchemeIndex];
            }
        }
        private int m_XRSchemeIndex = -1;
        public InputControlScheme XRScheme
        {
            get
            {
                if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
                return asset.controlSchemes[m_XRSchemeIndex];
            }
        }
        public interface IBasicActions
        {
            void OnTouch1(InputAction.CallbackContext context);
            void OnTouch2(InputAction.CallbackContext context);
            void OnTouch3(InputAction.CallbackContext context);
        }
    }
}
